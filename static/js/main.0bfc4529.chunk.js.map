{"version":3,"sources":["logo.svg","App.js","reportWebVitals.js","index.js"],"names":["layers","mappings","App","useState","visibility","setVisibility","useEffect","obj","layer","document","getElementById","setAttribute","text","showId","id","alert","Object","assign","style","display","toString","type","onClick","label","showLabel","value","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"8NAAe,I,YCMTA,EAAS,CAAC,OAChB,WACA,SACA,OACA,SACA,cACA,QACA,iBACA,kBACA,mBACA,eACA,aACA,QACA,OACA,YACA,WACA,kBACA,YACA,eACA,QACA,eACA,oBACA,OACA,SACA,QACA,WACA,aACA,YACA,aACA,SACA,OACA,aACA,UAEMC,EAAW,CACf,KAAQ,CAAC,WAAY,OAAQ,cAAe,SAAU,QAAS,mBAAoB,YACnF,MAAS,CAAC,YAAa,cACvB,KAAQ,CAAC,YAAa,OAAQ,aAC9B,OAAU,CAAC,UACX,YAAe,CAAC,aAAc,eAAgB,qBAC9C,IAAO,CAAC,SACR,OAAU,CAAC,gBACX,MAAS,CAAC,SAAU,QAAS,OAAQ,iBAAkB,mBACvD,KAAQ,CAAC,mBACT,KAAQ,CAAC,OAAQ,UACjB,SAAY,CAAC,YACb,QAAW,CAAC,QAAS,aAAc,gBACnC,MAAS,CAAC,aAAc,SAAU,SAgDrBC,MA7Cf,WACE,MAAoCC,mBAAS,IAA7C,mBAAOC,EAAP,KAAmBC,EAAnB,KACAC,qBAAU,WACR,IADY,EACRC,EAAM,GADE,cAGKP,GAHL,IAGZ,IAAI,EAAJ,qBAAwB,CAAC,IAAjBQ,EAAgB,QACtBD,EAAIC,GAAS,aACbC,SAASC,eAAeF,GAAOG,aAAa,SAAU,iBAL5C,8BAOZN,EAAcE,KACb,IACH,IAXa,EAYTK,EAAO,GAZE,cAcIZ,GAdJ,IAcb,IAAI,EAAJ,qBAAwB,CAAC,IAAjBQ,EAAgB,QACtBI,GAAI,WAAQJ,EAAR,sBAA2BA,KAASJ,EAAWA,EAAWI,GAAO,OAAjE,QAfO,8BAkBb,IAAMK,EAAS,SAACC,IACVA,KAAMV,GACRW,MAAM,6BAERV,EAAcW,OAAOC,OAAPD,OAAA,IAAAA,CAAA,GAAgBF,EAAK,WAAYV,IAC/CK,SAASC,eAAeI,GAAIH,aAAa,SAAU,KAQrD,OACE,gCACE,mBAAGO,MAAO,CAACC,QAAS,QAApB,SAA8Bf,EAAWgB,aACzC,gCACCR,IAED,iCACE,uBAAOE,GAAG,UAAUO,KAAK,SACzB,uBAAOA,KAAK,SAASC,QAAS,YAblB,SAACC,GAAW,IAAD,gBACZtB,EAASsB,IADG,IAC3B,2BAA+B,CAAC,IAAvBT,EAAsB,QAC7BD,EAAOC,IAFkB,+BAaYU,CAAUf,SAASC,eAAe,WAAWe,QAASA,MAAM,mBCnFxFC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEF5B,SAASC,eAAe,SAM1BgB,M","file":"static/js/main.0bfc4529.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","/* eslint react/style-prop-object: 0 */\n\nimport logo from './logo.svg';\nimport './App.css';\nimport { useEffect, useState } from 'react';\n\nconst layers = [\"wall\",\n\"stickies\",\n\"bakery\",\n\"cake\",\n\"candle\",\n\"bakeryfront\",\n\"shelf\",\n\"booklowershelf\",\n\"booklowershelf2\",\n\"shelfsecondfloor\",\n\"bunny_basket\",\n\"bunny_copy\",\n\"bunny\",\n\"auro\",\n\"mukulbody\",\n\"toptable\",\n\"restaurant_menu\",\n\"aurophone\",\n\"netflixlappy\",\n\"cards\",\n\"thickshake_1\",\n\"thickshake_1_copy\",\n\"book\",\n\"book_1\",\n\"book2\",\n\"shelftop\",\n\"thickshake\",\n\"aurohands\",\n\"pictionary\",\n\"avalon\",\n\"Coup\",\n\"mukulhands\",\n\"dialog\"]\n\nconst mappings = {\n  \"cafe\": [\"toptable\", \"wall\", \"bakeryfront\", \"bakery\", \"shelf\", \"shelfsecondfloor\", \"shelftop\"],\n  \"mukul\": [\"mukulbody\", \"mukulhands\"],\n  \"auro\": [\"aurohands\", \"auro\", \"aurophone\"],\n  \"dialog\": [\"dialog\"],\n  \"thickshakes\": [\"thickshake\", \"thickshake_1\", \"thickshake_1_copy\"],\n  \"uno\": [\"cards\"],\n  \"laptop\": [\"netflixlappy\"],\n  \"books\": [\"book_1\", \"book2\", \"book\", \"booklowershelf\", \"booklowershelf2\"], \n  \"menu\": [\"restaurant_menu\"],\n  \"cake\": [\"cake\", \"candle\"],\n  \"stickies\": [\"stickies\"],\n  \"bunnies\": [\"bunny\", \"bunny_copy\", \"bunny_basket\"],\n  \"games\": [\"pictionary\", \"avalon\", \"Coup\"],\n}\n\nfunction App() {\n  const [visibility, setVisibility] = useState({})\n  useEffect(()=>{\n    let obj = {}\n    // hide all layers in layers\n    for(let layer of layers){\n      obj[layer] = \"visibility\"\n      document.getElementById(layer).setAttribute(\"filter\", \"url(#blurMe)\")\n    }\n    setVisibility(obj)\n  }, [])\n  let currentHint = 0;\n  let text = \"\"\n\n  for(let layer of layers){\n    text += `#${layer} { display:${layer in visibility?visibility[layer]:\"none\"}; }`\n  }\n\n  const showId = (id) => {\n    if(!id in visibility){\n      alert(\"Wrong guess. Try again :(\")\n    }\n    setVisibility(Object.assign({[id]: \"visible\"}, visibility))\n    document.getElementById(id).setAttribute(\"filter\", \"\")\n  }\n\n  const showLabel = (label) => {\n    for (let id of mappings[label]){\n      showId(id)\n    }\n  }\n  return (\n    <div>\n      <p style={{display: \"none\"}}>{visibility.toString()}</p>\n      <style>\n      {text}\n      </style>\n      <form>\n        <input id=\"textbox\" type=\"text\" />\n        <input type=\"submit\" onClick={()=>{showLabel(document.getElementById(\"textbox\").value)}} value=\"Reveal!\"/>\n      </form>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}